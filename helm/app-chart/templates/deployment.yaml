{{- range $componentName, $component := .Values.components }}
{{- if $component.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" $ }}-{{ $component.name }}
  labels:
    {{- include "app.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $component.name }}
spec:
  {{- if not $component.autoscaling.enabled }}
  replicas: {{ $component.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $component.name }}
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $component.name }}
    spec:
      {{- $registrySecrets := list }}
      {{- $secrets := lookup "v1" "Secret" $.Release.Namespace "" }}
      {{- if $secrets }}
        {{- range $k, $v := $secrets.items }}
          {{- if hasSuffix "-registry" $v.metadata.name }}
            {{- $registrySecrets = append $registrySecrets (dict "name" $v.metadata.name) }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if gt (len $registrySecrets) 0 }}
      imagePullSecrets:
        {{- toYaml $registrySecrets | nindent 8 }}
      {{- end }}
      {{- $secretName := $component.secretName | default "" }}
      {{- if $.Values.defaults.autoDetectSecrets }}
        {{- $defaultSecretName := printf "%s-%s-secrets" (include "app.fullname" $) $component.name }}
        {{- $secretExists := lookup "v1" "Secret" $.Release.Namespace $defaultSecretName }}
        {{- if $secretExists }}
          {{- $secretName = $defaultSecretName }}
        {{- end }}
      {{- end }}
      {{- if $component.initContainers }}
      initContainers:
        {{- range $container := $component.initContainers }}
        - name: {{ $container.name }}
          image: "{{ $component.image.repository }}:{{ $component.image.tag | default $.Values.defaults.image.tag }}"
          command: ["sh", "-c", "{{ $container.command }}"]
          env:
            {{- if $component.env }}
            {{- range $key, $value := $component.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- include "app.backendEnvVars" (dict "component" $component "root" $) | nindent 12 }}
          {{- if $secretName }}
          envFrom:
            - secretRef:
                name: {{ $secretName }}
          {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ $component.name }}
          image: "{{ $component.image.repository }}:{{ $component.image.tag | default $.Values.defaults.image.tag }}"
          imagePullPolicy: {{ $component.image.pullPolicy | default $.Values.defaults.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $component.service.targetPort }}
              protocol: TCP
          env:
            {{- if $component.env }}
            {{- range $key, $value := $component.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- include "app.backendEnvVars" (dict "component" $component "root" $) | nindent 12 }}
            {{- if eq $component.name "frontend" }}
            - name: NEXTAUTH_URL
              value: "https://{{ $component.host }}/auth"
            {{- end}}
            {{- if and (eq $component.name "frontend") ($.Values.components.backend.enabled) }}
            - name: NEXT_PUBLIC_BACKEND_URL
              value: "https://{{ $.Values.components.backend.host }}/api"
            {{- end }}
            {{- if and (eq $component.name "frontend") ($.Values.keycloak.realm) }}
            - name: NEXT_PUBLIC_KEYCLOAK_REALM
              value: {{ $.Values.keycloak.realm | quote }}
            - name: NEXT_PUBLIC_KEYCLOAK_CLIENT_ID
              value: "app"
            - name: NEXT_PUBLIC_KEYCLOAK_URL
              value: "https://sso.lyrolab.fr"
            {{- end }}
          {{- if $secretName }}
          envFrom:
            - secretRef:
                name: {{ $secretName }}
          {{- end }}
          resources:
            {{- if $component.resources }}
            {{- toYaml $component.resources | nindent 12 }}
            {{- else }}
            {{- toYaml $.Values.defaults.resources | nindent 12 }}
            {{- end }}
          {{- if eq $component.name "backend" }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- end }}
{{- end }}
{{- end }}
